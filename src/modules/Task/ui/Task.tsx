import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/shared/ui/card';
import { Textarea } from '@/shared/ui/textarea';
import { AlarmClock, Calendar as CalendarIcon, Flag, Plus, User } from 'lucide-react';
import { TaskCommand } from './TaskCommand';
import { ProjectItem, TaskComboBox } from './TaskComboBox';
import { Button } from '@/shared/ui/button';
import { DatePicker } from './DatePicker';
import { DropdownMenuItem } from '@/shared/ui/dropdown-menu';
import { ReactNode, useState } from 'react';
import { CheckboxTask } from './checkBocks';

interface TaskProps {
   className?: string;
}
interface flag {
   id: number;
   flag: ReactNode;
   priority: string;
}
const flags: flag[] = [
   { id: 1, flag: <Flag className='mr-2 w-4' />, priority: '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç' },
   { id: 2, flag: <Flag className='mr-2 w-4 fill-red-600' />, priority: '–í—ã—Å–æ–∫–∏–π' },
   { id: 3, flag: <Flag className='mr-2 w-4 fill-yellow-400' />, priority: '–°—Ä–µ–¥–Ω–∏–π' },
   { id: 4, flag: <Flag className='mr-2 w-4 fill-blue-600' />, priority: '–ù–∏–∑–∫–∏–π' },
];
const users: ProjectItem[] = [
   {
      label: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
      value: 'users',
      children: [
         { label: '–í–∏–ª–∫–æ–≤ –í. –í. (240303vilkov@gmail.com)', value: '–í–∏–ª–∫–æ–≤ –í. –í. (240303vilkov@gmail.com)' },
         { label: '–†—É—Ç–∏–Ω—ã üåÄ', value: '–†—É—Ç–∏–Ω—ã' },
         { label: '–í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ ‚ú®', value: '–í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ' },
      ],
   },
];

const projects: ProjectItem[] = [
   {
      label: '–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã',
      value: 'my-projects',
      children: [
         { label: '–£—á–µ–±–∞ üìö', value: '–£—á—ë–±–∞' },
         { label: '–†—É—Ç–∏–Ω—ã üåÄ', value: '–†—É—Ç–∏–Ω—ã' },
         { label: '–í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ ‚ú®', value: '–í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ' },
      ],
   },
];
export const Task = ({ className }: TaskProps) => {
   const [currentFlag, setCurrentFlag] = useState<flag>(flags[0]); // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç

   const handleFlagSelect = (selectedFlag: flag) => {
      setCurrentFlag(selectedFlag);
   };

   return (
      <div className='mt-14 flex flex-col gap-8'>
         <h1 className='text-4xl font-bold'>–°–µ–≥–æ–¥–Ω—è</h1>
         <Card className='px-0 pb-0'>
            <CardHeader className='flex flex-col gap-4 pb-0 pt-0'>
               <Textarea className='my-4 h-12 border-none text-xl' placeholder='–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏' />
               <Textarea className='h-20 border-none' placeholder='–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏' />
               <div className='flex gap-2'>
                  <DatePicker svg={<CalendarIcon className='mr-2 w-4' />} pickerName='–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è' />
                  <TaskCommand svg={currentFlag.flag} text={currentFlag.priority}>
                     {flags.map((item) => (
                        <DropdownMenuItem className='flex' key={item.id} onClick={() => handleFlagSelect(item)}>
                           {item.flag} {item.priority}
                        </DropdownMenuItem>
                     ))}
                  </TaskCommand>
                  <DatePicker svg={<AlarmClock className='mr-2 w-4' />} pickerName='–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π' />
               </div>
            </CardHeader>
            <CardFooter className='flex h-20 items-center justify-between border-t'>
               <div className='ml-5 flex gap-2'>
                  <TaskComboBox items={projects} />
                  <TaskComboBox
                     items={users}
                     placeholder='–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
                     defaultLabel='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
                     svg={<User className='w-4' />}
                  />
               </div>

               <div className='mr-5 flex gap-2'>
                  <Button className='h-12 bg-red-500 hover:bg-red-400'>–û—Ç–º–µ–Ω–∞</Button>
                  <Button disabled className='h-12'>
                     –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É
                  </Button>
               </div>
            </CardFooter>
         </Card>
         <div className='flex flex-col'>
            <div className='text-xl font-bold'>23 –Ω–æ—è–±—Ä—è ¬∑ –°–µ–≥–æ–¥–Ω—è ¬∑ –°—É–±–±–æ—Ç–∞</div>
            <div>
               <CheckboxTask />
            </div>
            <div className='hover:cursor-pointer'>
               <span className='flex gap-2 text-gray-600'>
                  <Plus className='text-primary' />
                  –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É
               </span>
            </div>
         </div>
      </div>
   );
};
